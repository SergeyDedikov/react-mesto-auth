{"version":3,"sources":["contexts/CurrentUserContext.js","utils/api.js","utils/auth.js","images/logo-mesto.svg","components/ButtonsNav.js","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/formValidator.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmationPopup.js","components/ProtectedRoute.js","components/PageWithAuthForm.js","components/Login.js","components/Register.js","components/InfoTooltip.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurentUserContext","React","createContext","defaultUser","name","about","avatar","_id","api","config","_checkResult","res","ok","json","Promise","reject","status","this","_url","url","_cohortId","cohortId","_tokenId","tokenId","_headers","authorization","fetch","method","headers","then","body","JSON","stringify","link","card","isLiked","auth","password","email","token","ButtonsNav","onSignOut","onChangeVisibleMenu","isVisibleMenu","pathname","useLocation","onClick","className","type","to","Header","loggedIn","currentUserEmail","useState","setIsVisibleMenu","containerMobilVisible","useEffect","src","logo","alt","Card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","cardDeleteButtonClassName","likes","some","i","cardLikeButtonClassName","length","Main","props","onEditAvatar","onEditProfile","onAddPlace","cards","map","cardItem","Footer","data","Date","lang","getFullYear","ImagePopup","onClose","validConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","FormValidator","formName","_checkInputValidity","inputElement","validity","valid","_hideInputError","_showInputError","_disableButtonSubmit","_buttonElement","setAttribute","classList","add","_inactiveButtonClass","_enableButtonSubmit","removeAttribute","remove","_setEventListeners","_toggleButtonState","_inputList","forEach","addEventListener","_formElement","document","querySelector","_inputSelector","_submitButtonSelector","_inputErrorClass","_errorClass","Array","from","querySelectorAll","errorElement","nextElementSibling","textContent","validationMessage","every","value","_hasInvalidInput","_hasEmptyInput","_isFormNotValid","PopupWithForm","validator","setValidator","formValidator","enableValidation","isOpen","resetValidation","onSubmit","noValidate","title","children","textButtonSubmit","EditProfilePopup","setName","description","setDescription","isLoading","e","preventDefault","onUpdateUser","onChange","target","id","placeholder","required","minLength","maxLength","EditAvatarPopup","avatarRef","useRef","isSubmitted","current","onUpdateAvatar","ref","AddPlacePopup","place","inputValues","setInputValues","handleChange","values","ConfirmationPopup","ProtectedRoute","Component","component","path","PageWithAuthForm","Login","onLogin","Register","onRegister","InfoTooltip","popupBackgroundClassName","isOk","message","App","history","useHistory","setLoggedIn","setCurrentUser","setCurrentUserEmail","setCards","selectedCard","setSelectedCard","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","setIsOk","setMessage","setIsSubmitted","setIsLoading","handleTokenCheck","localStorage","getItem","checkToken","push","catch","err","showInfoTooltip","set","closeAllPopups","setTimeout","all","getUserInfo","getCardList","userData","cardsData","console","log","Provider","removeItem","exact","changeLikeCardStatus","newCard","state","c","deleteCard","filter","register","statusCode","login","setItem","setUserAvatar","newUser","finally","setUserInfo","cardData","addNewCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.94f356ae.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const CurentUserContext = React.createContext();\n\nexport const defaultUser = {\n  name: \"\",\n  about: \"\",\n  avatar: \"\",\n  _id: \"\",\n};\n","//* API config */\n\nconst apiConfig = {\n  url: \"https://mesto.nomoreparties.co\",\n  cohortId: \"cohort-29\",\n  tokenId: \"aac8a826-6020-4164-947b-69b028e1e5c6\",\n};\n\nclass Api {\n  constructor(config) {\n    this._url = config.url;\n    this._cohortId = config.cohortId;\n    this._tokenId = config.tokenId;\n    this._headers = {\n      authorization: this._tokenId,\n      \"Content-Type\": \"application/json\",\n    };\n  }\n\n  _checkResult = (res) => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`${res.status}`);\n    }\n  };\n\n  getCardList() {\n    return fetch(`${this._url}/v1/${this._cohortId}/cards`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._checkResult);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/v1/${this._cohortId}/users/me`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._checkResult);\n  }\n\n  setUserAvatar({ avatar }) {\n    return fetch(`${this._url}/v1/${this._cohortId}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar,\n      }),\n    }).then(this._checkResult);\n  }\n\n  setUserInfo({ name, about }) {\n    return fetch(`${this._url}/v1/${this._cohortId}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    }).then(this._checkResult);\n  }\n\n  addNewCard({ name, link }) {\n    return fetch(`${this._url}/v1/${this._cohortId}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    }).then(this._checkResult);\n  }\n\n  deleteCard(card) {\n    return fetch(`${this._url}/v1/${this._cohortId}/cards/${card._id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResult);\n  }\n\n  changeLikeCardStatus(card, isLiked) {\n    return fetch(`${this._url}/v1/${this._cohortId}/cards/likes/${card._id}`, {\n      method: isLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResult);\n  }\n}\n\nconst api = new Api(apiConfig);\n\nexport default api;\n","const BASE_URL = \"https://auth.nomoreparties.co\";\n\nclass Auth {\n  constructor(url) {\n    this._url = url;\n    this._headers = {\n      \"Content-Type\": \"application/json\",\n    };\n  }\n\n  _checkResult = (res) => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`${res.status}`);\n    }\n  };\n\n  register({ password, email }) {\n    return fetch(`${this._url}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password,\n        email,\n      }),\n    }).then(this._checkResult);\n  }\n\n  login({ password, email }) {\n    return fetch(`${this._url}/signin`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password,\n        email,\n      }),\n    }).then(this._checkResult);\n  }\n\n  checkToken(token) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`,\n      },\n    }).then(this._checkResult);\n  }\n}\n\nconst auth = new Auth(BASE_URL);\n\nexport default auth;\n","export default __webpack_public_path__ + \"static/media/logo-mesto.03b78ada.svg\";","import { Link, useLocation } from \"react-router-dom\";\n\nexport default function ButtonsNav({\n  onSignOut,\n  onChangeVisibleMenu,\n  isVisibleMenu,\n}) {\n  const { pathname } = useLocation();\n\n  if (pathname === \"/\") {\n    return (\n      <>\n        <button\n          onClick={onSignOut}\n          className=\"button link signout signout_place_nav\"\n          type=\"button\"\n        >\n          Выйти\n        </button>\n        <button\n          onClick={onChangeVisibleMenu}\n          // -- меняем вид кнопки\n          className={`button header__burger-menu ${\n            isVisibleMenu && \"header__burger-menu_close\"\n          }`}\n          type=\"button\"\n        ></button>\n      </>\n    );\n  } else if (pathname === \"/sign-up\") {\n    return (\n      <Link to=\"/sign-in\" className=\"button link\">\n        Войти\n      </Link>\n    );\n  } else if (pathname === \"/sign-in\") {\n    return (\n      <Link to=\"/sign-up\" className=\"button link\">\n        Регистрация\n      </Link>\n    );\n  } else {\n    return null;\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport logo from \"../images/logo-mesto.svg\";\nimport ButtonsNav from \"./ButtonsNav\";\n\nexport default function Header({ loggedIn, currentUserEmail, onSignOut }) {\n  // -- Управляем отображением верхней части хидера\n  const [isVisibleMenu, setIsVisibleMenu] = useState(false);\n\n  const containerMobilVisible = `header__container-mobil ${\n    loggedIn && isVisibleMenu && \"header__container-mobil_visible\"\n  }`;\n\n  useEffect(() => {\n    if (!loggedIn) {\n      // если выйдем из системы с раскрытым меню, то спрячем его\n      setIsVisibleMenu(false);\n    }\n  }, [loggedIn]);\n\n  function onChangeVisibleMenu() {\n    setIsVisibleMenu(!isVisibleMenu);\n  }\n\n  return (\n    <header className=\"header\">\n      <div className={containerMobilVisible}>\n        <p className=\"header__user-email header__user-email_mobil\">{currentUserEmail}</p>\n        <button\n          onClick={onSignOut}\n          className=\"button link signout signout_place_header\"\n          type=\"button\"\n        >\n          Выйти\n        </button>\n      </div>\n      <div className=\"header__container-general\">\n        <img className=\"header__logo\" src={logo} alt=\"Логотип Место.Россия\" />\n        <p className=\"header__user-email\">{currentUserEmail}</p>\n        <nav className=\"header__nav\">\n          <ButtonsNav\n            onSignOut={onSignOut}\n            onChangeVisibleMenu={onChangeVisibleMenu}\n            isVisibleMenu={isVisibleMenu}\n          />\n        </nav>\n      </div>\n    </header>\n  );\n}\n","import { useContext } from \"react\";\nimport { CurentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\n  const currentUser = useContext(CurentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = `card__button-remove ${\n    !isOwn && \"card__button-remove_hidden\"\n  }`;\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `card__button-like ${\n    isLiked && \"card__button-like_active\"\n  }`;\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  return (\n    <li>\n      <figure className=\"card\">\n        <img\n          className=\"card__photo\"\n          src={card.link}\n          alt={`На фотографии: ${card.name}`}\n          onClick={handleClick}\n        />\n        <figcaption className=\"card__info\">\n          <h2 className=\"card__description\">{card.name}</h2>\n          <div className=\"card__likes-box\">\n            <button\n              onClick={handleLikeClick}\n              className={`${cardLikeButtonClassName} button`}\n              type=\"button\"\n            ></button>\n            <p className=\"card__likes-count\">{card.likes.length}</p>\n          </div>\n          <button\n            onClick={handleDeleteClick}\n            className={`${cardDeleteButtonClassName} button`}\n            type=\"button\"\n          ></button>\n        </figcaption>\n      </figure>\n    </li>\n  );\n}\n\nexport default Card;\n","import { useContext } from \"react\";\nimport { CurentUserContext } from \"../contexts/CurrentUserContext\";\nimport Card from \"./Card\";\n\nfunction Main(props) {\n  // -- Подписываемся на контекст\n  const currentUser = useContext(CurentUserContext);\n\n  return (\n    <main className=\"main\">\n      <section className=\"profile\" aria-label=\"Профиль пользователя\">\n        <div className=\"profile__avatar-box\">\n          <img\n            className=\"profile__avatar\"\n            src={currentUser.avatar}\n            alt=\"Аватар пользователя\"\n          />\n          <button\n            onClick={props.onEditAvatar}\n            className=\"profile__button profile__button_type_avatar button\"\n            type=\"button\"\n          ></button>\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button\n            onClick={props.onEditProfile}\n            className=\"profile__button profile__button_type_edit button\"\n            type=\"button\"\n          ></button>\n          <p className=\"profile__job\">{currentUser.about}</p>\n        </div>\n        <button\n          onClick={props.onAddPlace}\n          className=\"profile__button profile__button_type_add button\"\n          type=\"button\"\n        ></button>\n      </section>\n\n      <section className=\"cards\" aria-label=\"Карточки мест\">\n        <ul className=\"cards__list\">\n          {props.cards.map((cardItem) => (\n              <Card\n                key={cardItem._id}\n                card={cardItem}\n                onCardClick={props.onCardClick}\n                onCardLike={props.onCardLike}\n                onCardDelete={props.onCardDelete}\n              />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","function Footer() {\n  const data = new Date();\n\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\" lang=\"en\">\n        &copy; {data.getFullYear()} Mesto Russia & Sergey Dedikov\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","function ImagePopup({ card, onClose }) {\n  return (\n    <div className={`popup popup_type_card ${card ? \"popup_opened\" : \"\"}`}>\n      <figure className=\"popup__card\">\n        <img\n          className=\"popup__card-image\"\n          src={card ? card.link : \"\"}\n          alt={card ? `На фотографии: ${card.name}` : \"\"}\n        />\n        <figcaption className=\"popup__card-info\">\n          <p className=\"popup__card-description\">{card ? card.name : \"\"}</p>\n          <button\n            onClick={onClose}\n            className=\"popup__close popup__close_card button\"\n            type=\"button\"\n          ></button>\n        </figcaption>\n      </figure>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","//** Validation Configuration */\n\nexport const validConfig = {\n  formSelector: \".form\",\n  inputSelector: \".form__input\",\n  submitButtonSelector: \".form__button\",\n  inactiveButtonClass: \"form__button_disabled\",\n  inputErrorClass: \"form__input_type_error\",\n  errorClass: \"form__error_visible\",\n};\n\nexport class FormValidator {\n  constructor(\n    {\n      formSelector,\n      inputSelector,\n      submitButtonSelector,\n      inactiveButtonClass,\n      inputErrorClass,\n      errorClass,\n    },\n    formName\n  ) {\n    this._formElement = document.querySelector(`${formSelector}_${formName}`);\n    this._inputSelector = inputSelector;\n    this._submitButtonSelector = submitButtonSelector;\n    this._inactiveButtonClass = inactiveButtonClass;\n    this._inputErrorClass = inputErrorClass;\n    this._errorClass = errorClass;\n    this._inputList = Array.from(\n      this._formElement.querySelectorAll(this._inputSelector)\n    );\n    this._buttonElement = this._formElement.querySelector(\n      this._submitButtonSelector\n    );\n  }\n\n  _showInputError(inputElement) {\n    const errorElement = inputElement.nextElementSibling;\n    inputElement.classList.add(this._inputErrorClass);\n    errorElement.textContent = inputElement.validationMessage;\n    errorElement.classList.add(this._errorClass);\n  }\n\n  _hideInputError(inputElement) {\n    const errorElement = inputElement.nextElementSibling;\n    errorElement.classList.remove(this._errorClass);\n    errorElement.textContent = \"\";\n    inputElement.classList.remove(this._inputErrorClass);\n  }\n\n  _checkInputValidity = (inputElement) => {\n    if (!inputElement.validity.valid) {\n      this._showInputError(inputElement);\n    } else {\n      this._hideInputError(inputElement);\n    }\n  };\n\n  _hasInvalidInput() {\n    return this._inputList.some((inputElement) => {\n      return !inputElement.validity.valid;\n    });\n  }\n\n  _hasEmptyInput() {\n    return this._inputList.every((inputElement) => {\n      return inputElement.value.length === 0;\n    });\n  }\n\n  _isFormNotValid() {\n    if (this._hasInvalidInput() || this._hasEmptyInput()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  _disableButtonSubmit = () => {\n    this._buttonElement.setAttribute(\"disabled\", true);\n    this._buttonElement.classList.add(this._inactiveButtonClass);\n  };\n\n  _enableButtonSubmit = () => {\n    this._buttonElement.removeAttribute(\"disabled\");\n    this._buttonElement.classList.remove(this._inactiveButtonClass);\n  };\n\n  _toggleButtonState() {\n    if (this._isFormNotValid()) {\n      this._disableButtonSubmit();\n    } else {\n      this._enableButtonSubmit();\n    }\n  }\n\n  resetValidation() {\n    this._toggleButtonState();\n    this._inputList.forEach((inputElement) => {\n      this._hideInputError(inputElement);\n    });\n  }\n\n  _setEventListeners = () => {\n    this._toggleButtonState();\n    this._inputList.forEach((inputElement) => {\n      inputElement.addEventListener(\"input\", () => {\n        this._checkInputValidity(inputElement);\n        this._toggleButtonState();\n      });\n    });\n  };\n\n  enableValidation() {\n    this._setEventListeners();\n  }\n}\n","import { FormValidator, validConfig } from \"../utils/formValidator\";\nimport { useEffect, useState } from \"react\";\n\nfunction PopupWithForm(props) {\n  // -- Создаём экземпляры валидаторов форм\n  const [validator, setValidator] = useState(null);\n\n  useEffect(() => {\n    const formValidator = new FormValidator(validConfig, props.name);\n    formValidator.enableValidation();\n    setValidator(formValidator);\n  }, [props.name]);\n\n  // -- Сброс валидации при открытии попапа\n  useEffect(() => {\n    if (props.isOpen && validator) {\n      validator.resetValidation();\n    }\n  }, [props.isOpen, validator]);\n\n  return (\n    <div\n      className={`\n        popup popup_type_${props.name}\n        ${props.isOpen ? \"popup_opened\" : \"\"}\n      `}\n    >\n      <div className={`popup__container popup__container_type_${props.name}`}>\n        <form\n          onSubmit={props.onSubmit}\n          name={`${props.name}`}\n          className={`form form_${props.name}`}\n          noValidate\n        >\n          <h3 className=\"form__heading\">{props.title}</h3>\n          {props.children}\n          <button\n            className={`form__button form__button_${props.name} button`}\n            type=\"submit\"\n          >\n            {props.textButtonSubmit}\n          </button>\n        </form>\n        <button\n          onClick={props.onClose}\n          className=\"popup__close button\"\n          type=\"button\"\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import { useState, useEffect, useContext } from \"react\";\nimport { CurentUserContext } from \"../contexts/CurrentUserContext\";\n\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditProfilePopup(props) {\n  const currentUser = useContext(CurentUserContext);\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  useEffect(() => {\n    // Получаем данные пользователя для полей формы\n    if (currentUser && props.isOpen) {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    }\n  }, [currentUser, props.isOpen]);\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      name={\"edit-profile\"}\n      title={\"Редактировать профиль\"}\n      textButtonSubmit={props.isLoading ? \"Сохранение...\" : \"Сохранить\"}\n      onSubmit={handleSubmit}\n    >\n      <fieldset className=\"form__input-container\">\n        <label className=\"form__field\">\n          <input\n            value={name}\n            onChange={handleChangeName}\n            id=\"name\"\n            placeholder=\"Введите имя\"\n            className=\"form__input\"\n            type=\"text\"\n            name=\"name\"\n            required\n            minLength=\"2\"\n            maxLength=\"40\"\n          />\n          <span id=\"name-error\" className=\"form__error\"></span>\n        </label>\n        <label className=\"form__field\">\n          <input\n            value={description}\n            onChange={handleChangeDescription}\n            id=\"job\"\n            placeholder=\"Расскажите немного о себе\"\n            className=\"form__input\"\n            type=\"text\"\n            name=\"job\"\n            required\n            minLength=\"2\"\n            maxLength=\"200\"\n          />\n          <span id=\"job-error\" className=\"form__error\"></span>\n        </label>\n      </fieldset>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import { useRef } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\n\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup(props) {\n  const avatarRef = useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  useEffect(() => {\n    if (props.isSubmitted) {\n      avatarRef.current.value = \"\";\n    }\n  }, [props.isSubmitted]);\n\n  return (\n    <PopupWithForm\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      name={\"edit-avatar\"}\n      title={\"Обновить аватар\"}\n      textButtonSubmit={props.isLoading ? \"Сохранение...\" : \"Сохранить\"}\n    >\n      <fieldset className=\"form__input-container\">\n        <label className=\"form__field\">\n          <input\n            ref={avatarRef}\n            id=\"avatar\"\n            className=\"form__input\"\n            type=\"url\"\n            name=\"avatar\"\n            placeholder=\"Ссылка на аватар\"\n            required\n          />\n          <span id=\"avatar-error\" className=\"form__error\"></span>\n        </label>\n      </fieldset>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import { useEffect, useState } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props) {\n  // -- Общий стэйт для полей ввода\n  const [inputValues, setInputValues] = useState({ place: \"\", link: \"\" });\n\n  function handleChange(e) {\n    setInputValues((values) => {\n      return { ...values, [e.target.name]: e.target.value };\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onAddPlace({\n      name: inputValues.place,\n      link: inputValues.link,\n    });\n  }\n\n  useEffect(() => {\n    // Очищаем поля ввода после отправки\n    if (props.isSubmitted) {\n      setInputValues({ place: \"\", link: \"\" })\n    }\n  }, [props.isSubmitted]);\n\n  return (\n    <PopupWithForm\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      name={\"add-place\"}\n      title={\"Новое место\"}\n      textButtonSubmit={props.isLoading ? \"Сохранение...\" : \"Создать\"}\n    >\n      <fieldset className=\"form__input-container\">\n        <label className=\"form__field\">\n          <input\n            value={inputValues.place}\n            onChange={handleChange}\n            id=\"place\"\n            className=\"form__input\"\n            type=\"text\"\n            name=\"place\"\n            placeholder=\"Название\"\n            required\n            minLength=\"2\"\n            maxLength=\"30\"\n          />\n          <span id=\"place-error\" className=\"form__error\"></span>\n        </label>\n        <label className=\"form__field\">\n          <input\n            value={inputValues.link}\n            onChange={handleChange}\n            id=\"link\"\n            className=\"form__input\"\n            type=\"url\"\n            name=\"link\"\n            placeholder=\"Ссылка на картинку\"\n            required\n          />\n          <span id=\"link-error\" className=\"form__error\"></span>\n        </label>\n      </fieldset>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import PopupWithForm from \"./PopupWithForm\";\n\nfunction ConfirmationPopup(props) {\n  return (\n    <PopupWithForm\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      name={\"confirmation\"}\n      title={\"Вы уверены?\"}\n      textButtonSubmit={props.isLoading ? \"Ожидайте...\" : \"Да\"}\n    />\n  );\n}\n\nexport default ConfirmationPopup;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route path={props.path}>\n      {() =>\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\n      }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;\n","import { useState } from \"react\";\n\nfunction PageWithAuthForm(props) {\n  const [inputValues, setInputValues] = useState({ email: \"\", password: \"\" });\n\n  function handleChange(e) {\n    setInputValues((values) => {\n      return { ...values, [e.target.name]: e.target.value };\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onSubmit({\n      email: inputValues.email,\n      password: inputValues.password,\n    });\n  }\n\n  return (\n    <section className=\"authentication\">\n      <form\n        onSubmit={handleSubmit}\n        name={`${props.name}`}\n        className={`form form_${props.name}`}\n      >\n        <h3 className={`form__heading form__heading_type_authentication`}>\n          {props.title}\n        </h3>\n        <fieldset className=\"form__input-container form__input-container_authentication\">\n          <label className=\"form__field\">\n            <input\n              value={inputValues.email}\n              onChange={handleChange}\n              id={`email-${props.name}`}\n              className=\"form__input form__input_theme_dark\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              required\n            />\n            <span id=\"place-error\" className=\"form__error\"></span>\n          </label>\n          <label className=\"form__field\">\n            <input\n              value={inputValues.password}\n              onChange={handleChange}\n              id={`password-${props.name}`}\n              className=\"form__input form__input_theme_dark\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Пароль\"\n              required\n            />\n            <span id=\"link-error\" className=\"form__error\"></span>\n          </label>\n        </fieldset>\n        <button\n          className={`form__button form__button_authentication form__button_theme_dark button`}\n          type=\"submit\"\n        >\n          {props.textButtonSubmit}\n        </button>\n      </form>\n      {props.children}\n    </section>\n  );\n}\n\nexport default PageWithAuthForm;\n","import PageWithAuthForm from \"./PageWithAuthForm\";\n\nfunction Login({ onLogin }) {\n  return (\n    <PageWithAuthForm\n      onSubmit={onLogin}\n      name={\"login\"}\n      title={\"Вход\"}\n      textButtonSubmit={\"Войти\"}\n    />\n  );\n}\n\nexport default Login;\n","import { Link } from \"react-router-dom\";\nimport PageWithAuthForm from \"./PageWithAuthForm\";\n\nfunction Register({ onRegister }) {\n  return (\n    <PageWithAuthForm\n      onSubmit={onRegister}\n      name={\"register\"}\n      title={\"Регистрация\"}\n      textButtonSubmit={\"Зарегистрироваться\"}\n    >\n      <p className=\"authentication__text\">\n        Уже зарегистрированы?{\" \"}\n        <span>\n          <Link to=\"/sign-in\" className=\"button link\">\n            Войти\n          </Link>\n        </span>\n      </p>\n    </PageWithAuthForm>\n  );\n}\n\nexport default Register;\n","function InfoTooltip(props) {\n  // переменная для `className` содержимого попапа\n  const popupBackgroundClassName = `popup__background ${\n    props.isOk ? \"popup__background_succes\" : \"popup__background_fail\"\n  }`;\n\n  // меняем текст в зависимости от статуса\n  const message = props.isOk\n    ? \"Вы успешно зарегистрировались!\"\n    : `${props.message}`;\n\n  return (\n    <div\n      className={`\n        popup popup_type_infotooltip\n        ${props.isOpen ? \"popup_opened\" : \"\"}\n      `}\n    >\n      <div className={`popup__container popup__container_type_infotooltip`}>\n        <div className={popupBackgroundClassName} />\n        <h3 className=\"popup__message\">{message}</h3>\n        <button\n          onClick={props.onClose}\n          className=\"popup__close button\"\n          type=\"button\"\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoTooltip;\n","import { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { CurentUserContext, defaultUser } from \"../contexts/CurrentUserContext\";\n\nimport \"../index.css\";\nimport api from \"../utils/api\";\nimport auth from \"../utils/auth\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ConfirmationPopup from \"./ConfirmationPopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\n\nfunction App() {\n  const history = useHistory();\n\n  // -- Переменная состояния авторизации\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  // -- Переменная состояния профиля\n  const [currentUser, setCurrentUser] = useState(defaultUser);\n  const [currentUserEmail, setCurrentUserEmail] = useState(\"\");\n\n  // -- Состояние карточек\n  const [cards, setCards] = useState([]);\n  // -- Переменная состояния выбранной карточки\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  // -- Переменные состояния попапов\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [isOk, setIsOk] = useState(null);\n  const [message, setMessage] = useState(\n    \"Что-то пошло не так! Попробуйте ещё раз.\"\n  );\n\n  // -- Переменные состояний отправки данных\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // -- Запрос данных с сервера\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getCardList()])\n      .then(([userData, cardsData]) => {\n        setCurrentUser(userData);\n        setCards(cardsData);\n      })\n      .catch((err) => {\n        console.log(err);\n        showInfoTooltip(false);\n      });\n  }, []);\n\n  // -- Проверяем токен пользователя\n  function handleTokenCheck() {\n    if (localStorage.getItem(\"token\")) {\n      auth\n        .checkToken(localStorage.getItem(\"token\"))\n        .then((res) => {\n          if (res) {\n            // меняем переменные состояния авторизации\n            setLoggedIn(true);\n            setCurrentUserEmail(res.data.email);\n            // переходим на главную страницу\n            history.push(\"/\");\n          }\n        })\n        .catch((err) => {\n          showInfoTooltip(false);\n          // обработаем ошибки\n          if (err === \"400\") {\n            setMessage(\"Токен не передан или передан не в том формате\");\n          }\n          if (err === \"401\") {\n            setMessage(\"Переданный токен некорректен\");\n          }\n        });\n    }\n  }\n\n  useEffect(() => {\n    handleTokenCheck();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // -- Регистрация пользователя\n  function onRegister(data) {\n    auth\n      .register(data)\n      .then((res) => {\n        if (res.statusCode !== 400) {\n          setMessage(\"Вы успешно зарегистрировались!\");\n          // -- показать попап Хорошо\n          showInfoTooltip(true);\n          setTimeout(() => {\n            history.push(\"/sign-in\");\n          }, 2000);\n        }\n      })\n      .catch((err) => {\n        showInfoTooltip(false);\n        if (err === \"400\") {\n          setMessage(\"Некорректно заполнено одно из полей. Попробуйте ещё раз.\");\n        }\n      });\n  }\n\n  // -- Вход в систему\n  function onLogin(data) {\n    auth\n      .login(data)\n      .then((res) => {\n        localStorage.setItem(\"token\", res.token);\n        handleTokenCheck();\n      })\n      .catch((err) => {\n        showInfoTooltip(false);\n        if (err === \"400\") {\n          setMessage(\"Не передано одно из полей. Попробуйте ещё раз.\");\n        }\n        if (err === \"401\") {\n          setMessage(\"Пользователь с email не найден. Попробуйте ещё раз.\");\n        }\n      });\n  }\n\n  // -- Выход из системы\n  function onSignOut() {\n    localStorage.removeItem(\"token\");\n    history.push(\"/sign-in\");\n    setCurrentUserEmail(\"\");\n    setLoggedIn(false);\n  }\n\n  // -- Обновление профиля\n\n  function handleUpdateUser(userData) {\n    setIsLoading(true);\n    api\n      .setUserInfo(userData)\n      .then((newUser) => {\n        setCurrentUser(newUser);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        // сброс текста кнопки Submit\n        setIsLoading(false);\n      });\n  }\n\n  // -- Обновление аватара\n\n  function handleUpdateAvatar(avatar) {\n    setIsLoading(true);\n    api\n      .setUserAvatar(avatar)\n      .then((newUser) => {\n        setCurrentUser(newUser);\n        // сброс полей ввода формы и текста кнопки Submit\n        setIsSubmitted(true);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  // -- Лайки, лайки, лайки\n\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(card, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // -- Удаление карточки\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // -- Добавление новой карточки\n\n  function handleAddPlaceSubmit(cardData) {\n    setIsLoading(true);\n    api\n      .addNewCard(cardData)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n        // сброс полей ввода формы и текста кнопки Submit\n        setIsSubmitted(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  // -- Функции попапов\n\n  function showInfoTooltip(set) {\n    // -- отобразим инфо-попап\n    setIsInfoTooltipOpen(true);\n    // -- выберем его тип\n    setIsOk(set);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n    setIsSubmitted(false);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    setIsSubmitted(false);\n  }\n\n  function closeAllPopups() {\n    // -- установим значения по умолчанию\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmationPopupOpen(false);\n    setIsInfoTooltipOpen(false);\n    setSelectedCard(null);\n    setTimeout(() => {\n      setMessage(\"Что-то пошло не так! Попробуйте ещё раз.\");\n    }, 1000);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  return (\n    <CurentUserContext.Provider value={currentUser}>\n      <Header\n        currentUserEmail={currentUserEmail}\n        onSignOut={onSignOut}\n        loggedIn={loggedIn}\n      />\n      <Switch>\n        <ProtectedRoute\n          exact\n          path=\"/\"\n          loggedIn={loggedIn}\n          component={Main}\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          cards={cards}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Route path=\"/sign-up\">\n          <Register onRegister={onRegister} />\n        </Route>\n        <Route path=\"/sign-in\">\n          <Login onLogin={onLogin} />\n        </Route>\n      </Switch>\n\n      <Footer />\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n        isSubmitted={isSubmitted}\n        isLoading={isLoading}\n      />\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n        isLoading={isLoading}\n      />\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlaceSubmit}\n        isSubmitted={isSubmitted}\n        isLoading={isLoading}\n      />\n      <ConfirmationPopup\n        isOpen={isConfirmationPopupOpen}\n        onClose={closeAllPopups}\n        isLoading={isLoading}\n      />\n      <InfoTooltip\n        isOk={isOk}\n        isOpen={isInfoTooltipOpen}\n        message={message}\n        onClose={closeAllPopups}\n      />\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n    </CurentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\"; // импортируем BrowserRouter\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}